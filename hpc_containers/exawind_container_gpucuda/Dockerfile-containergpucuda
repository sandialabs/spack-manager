LABEL maintainer="Philip Sakievich, Sandia National Laboratories <psakiev@sandia.gov>"

# NVIDIA base images:  https://catalog.ngc.nvidia.com/orgs/nvidia/containers/cuda/tags

ARG REGISTRY=nvcr.io/nvidia
ARG IMAGE=cuda
ARG TAG=11.8.0-devel-ubuntu22.04
#ARG TAG=12.2.0-devel-ubuntu22.04

FROM ${REGISTRY}/${IMAGE}:${TAG}

# Make bash the default $SHELL
SHELL ["/bin/bash", "-c"]

# Install Spack Prereqs: https://spack.readthedocs.io/en/latest/getting_started.html#system-prerequisites

RUN apt-get update -yqq && \
    apt-get upgrade -yqq

RUN apt-get install -yqq \
    autoconf \
    automake \
    bzip2 \
    ca-certificates \
    clangd \
    coreutils \
    curl \
    emacs-nox \
    file \
    flex \
    gcc \
    gcc-multilib \
    gcc-doc \
    g++ \
    gfortran \
    gfortran-multilib \
    gfortran-doc \
    git \
    git-doc \
    git-man \
    gnupg2 \
    hwloc-nox \
    libbz2-dev \
    libffi-dev \
    libfmt-dev \
    libgdbm-dev \
    libgdbm6 \
    libgmp-dev \
    libhwloc-common \
    libhwloc-dev \
    libhwloc15 \
    libjpeg-dev \
    libmpc-dev \
    libncurses-dev \
    libtool \
    libtool-bin \
    libtool-doc \
    libx11-dev \
    lsb-release \
    m4 \
    make \
    mpich \
    mpich-doc \
    nano \
    python3 \
    python3-distutils \
    python3-venv \
    unzip \
    vim \
    wget \
    wget2 \
    xz-utils \
    zip \
    zlib1g-dev

RUN apt clean -y

# Exawind GPU snapshot 
WORKDIR /exawind-entry
#
#RUN git clone --recursive https://github.com/sandialabs/spack-manager
# Pre-merge fork
RUN git clone --recursive https://github.com/ajpowelsnl/spack-manager
# Needed by "create-exawind-snapshot.sh"
ENV SPACK_MANAGER_MACHINE=containergpucuda
ENV CONTAINER_BUILD=gpucuda
ENV SPACK_MANAGER=/exawind-entry/spack-manager

WORKDIR /exawind-entry/spack-manager

# Nota bene: commented code is needed, but does not work in container env
# Pre-merge branch from ajpowelsnl/spack-manager fork
# RUN git checkout gpucontainer

# Temp. code:  Use branch of Spack w/ patch
# DOESN'T BUILD CORRECTLY
#RUN cd spack
#RUN git remote add amy_fork https://github.com/ajpowelsnl/spack.git
#RUN git fetch amy_fork
#RUN git checkout amy_fork/spack/patch_yaksa


# Snapshot will be generated upon running container
RUN  echo "pwd" >> /etc/bash.bashrc && \
     echo "cd spack" >> /etc/bash.bashrc && \
     echo "git remote add amy_fork https://github.com/ajpowelsnl/spack.git" >> /etc/bash.bashrc && \
     echo "git fetch amy_fork" >> /etc/bash.bashrc && \
     echo "git checkout amy_fork/spack/patch_yaksa" >> /etc/bash.bashrc && \
     echo "cd .." >> /etc/bash.bashrc && \
     echo "pwd" >> /etc/bash.bashrc && \
     echo "git checkout gpucontainer" >> /etc/bash.bashrc && \
     echo "export SPACK_MANAGER=$SPACK_MANAGER" >> /etc/bash.bashrc && \
     echo "source $SPACK_MANAGER/start.sh && spack-start" >> /etc/bash.bashrc && \
     echo "spack external find --all" >> /etc/bash.bashrc && \
     echo "$SPACK_MANAGER/scripts/create-exawind-snapshot.sh" >> /etc/bash.bashrc && \
     echo "spack clean --all" >> /etc/bash.bashrc && \
     echo "spack env activate -d snapshots/exawind/containergpucuda/$(date +%Y-%m-%d)" >> /etc/bash.bashrc && \
     echo "spack load exawind" >> /etc/bash.bashrc

# Verify .bashrc
# RUN ["/bin/bash", "-c", "tail -n 6 /etc/bash.bashrc"]

# Verify executable:
#   66  spack env activate -d snapshots/exawind/containergpucuda/2023-11-01/
#   67  spack load exawind
#   68  which exawind
#   69  exawind --help



#WORKDIR /exawind-entry
CMD [ "/bin/bash" ]
